{"ast":null,"code":"// use a already existing formater or fallback to the default v8 formater\nvar defaultFormater = require('./format.js');\n\nvar originalCallSiteSymbol = Symbol('originalCallSite');\nvar mutatedCallSiteSymbol = Symbol('mutatedCallSite'); // public define API\n\nfunction stackChain() {\n  this.extend = new TraceModifier();\n  this.filter = new TraceModifier();\n  this.format = new StackFormater();\n  this.version = require('./package.json').version;\n}\n\nvar SHORTCIRCUIT_CALLSITE = false;\n\nstackChain.prototype.callSite = function collectCallSites(options) {\n  if (!options) options = {}; // Get CallSites\n\n  SHORTCIRCUIT_CALLSITE = true;\n  var obj = {};\n  Error.captureStackTrace(obj, collectCallSites);\n  var callSites = obj.stack;\n  SHORTCIRCUIT_CALLSITE = false; // Slice\n\n  callSites = callSites.slice(options.slice || 0); // Modify CallSites\n\n  if (options.extend) callSites = this.extend._modify(obj, callSites);\n  if (options.filter) callSites = this.filter._modify(obj, callSites); // Done\n\n  return callSites;\n};\n\nstackChain.prototype.originalCallSite = function (error) {\n  error.stack;\n  return error[originalCallSiteSymbol];\n};\n\nstackChain.prototype.mutatedCallSite = function (error) {\n  error.stack;\n  return error[mutatedCallSiteSymbol];\n};\n\nvar chain = new stackChain();\n\nfunction TraceModifier() {\n  this._modifiers = [];\n}\n\nTraceModifier.prototype._modify = function (error, frames) {\n  for (var i = 0, l = this._modifiers.length; i < l; i++) {\n    frames = this._modifiers[i](error, frames);\n  }\n\n  return frames;\n};\n\nTraceModifier.prototype.attach = function (modifier) {\n  this._modifiers.push(modifier);\n};\n\nTraceModifier.prototype.deattach = function (modifier) {\n  var index = this._modifiers.indexOf(modifier);\n\n  if (index === -1) return false;\n\n  this._modifiers.splice(index, 1);\n\n  return true;\n};\n\nfunction StackFormater() {\n  this._formater = defaultFormater;\n  this._previous = undefined;\n}\n\nStackFormater.prototype.replace = function (formater) {\n  if (formater) {\n    this._formater = formater;\n  } else {\n    this.restore();\n  }\n};\n\nStackFormater.prototype.restore = function () {\n  this._formater = defaultFormater;\n  this._previous = undefined;\n};\n\nStackFormater.prototype._backup = function () {\n  this._previous = this._formater;\n};\n\nStackFormater.prototype._roolback = function () {\n  if (this._previous === defaultFormater) {\n    this.replace(undefined);\n  } else {\n    this.replace(this._previous);\n  }\n\n  this._previous = undefined;\n}; //\n// Set Error.prepareStackTrace thus allowing stack-chain\n// to take control of the Error().stack formating.\n//\n// If there already is a custom stack formater, then set\n// that as the stack-chain formater.\n\n\nif (Error.prepareStackTrace) {\n  chain.format.replace(Error.prepareStackTrace);\n}\n\nvar SHORTCIRCUIT_FORMATER = false;\n\nfunction prepareStackTrace(error, originalFrames) {\n  if (SHORTCIRCUIT_CALLSITE) return originalFrames;\n  if (SHORTCIRCUIT_FORMATER) return defaultFormater(error, originalFrames); // Make a loss copy of originalFrames\n\n  var frames = originalFrames.concat(); // extend frames\n\n  frames = chain.extend._modify(error, frames); // filter frames\n\n  frames = chain.filter._modify(error, frames); // reduce frames to match Error.stackTraceLimit\n\n  frames = frames.slice(0, Error.stackTraceLimit); // Set the callSite property\n  // But only if it hasn't been explicitly set, otherwise\n  // error.stack would have unintended side effects. Check also for\n  // non-extensible/sealed objects, such as those from Google's Closure Library\n\n  if (Object.isExtensible(error)) {\n    error[originalCallSiteSymbol] = originalFrames;\n    error[mutatedCallSiteSymbol] = frames;\n  } // format frames\n\n\n  SHORTCIRCUIT_FORMATER = true;\n\n  var format = chain.format._formater(error, frames);\n\n  SHORTCIRCUIT_FORMATER = false;\n  return format;\n} // Replace the v8 stack trace creator\n\n\nObject.defineProperty(Error, 'prepareStackTrace', {\n  'get': function () {\n    return prepareStackTrace;\n  },\n  'set': function (formater) {\n    // If formater is prepareStackTrace it means that someone ran\n    // var old = Error.prepareStackTrace;\n    // Error.prepareStackTrace = custom\n    // new Error().stack\n    // Error.prepareStackTrace = old;\n    // The effect of this, should be that the old behaviour is restored.\n    if (formater === prepareStackTrace) {\n      chain.format._roolback();\n    } // Error.prepareStackTrace was set, this means that someone is\n    // trying to take control of the Error().stack format. Make\n    // them belive they succeeded by setting them up as the stack-chain\n    // formater.\n    else {\n        chain.format._backup();\n\n        chain.format.replace(formater);\n      }\n  }\n});\nmodule.exports = chain;","map":{"version":3,"sources":["/Users/marcoscampos/Files/Portfolio/facerecogbrain/node_modules/stack-chain/stack-chain.js"],"names":["defaultFormater","require","originalCallSiteSymbol","Symbol","mutatedCallSiteSymbol","stackChain","extend","TraceModifier","filter","format","StackFormater","version","SHORTCIRCUIT_CALLSITE","prototype","callSite","collectCallSites","options","obj","Error","captureStackTrace","callSites","stack","slice","_modify","originalCallSite","error","mutatedCallSite","chain","_modifiers","frames","i","l","length","attach","modifier","push","deattach","index","indexOf","splice","_formater","_previous","undefined","replace","formater","restore","_backup","_roolback","prepareStackTrace","SHORTCIRCUIT_FORMATER","originalFrames","concat","stackTraceLimit","Object","isExtensible","defineProperty","module","exports"],"mappings":"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","sourcesContent":["\n// use a already existing formater or fallback to the default v8 formater\nvar defaultFormater = require('./format.js');\nvar originalCallSiteSymbol = Symbol('originalCallSite');\nvar mutatedCallSiteSymbol = Symbol('mutatedCallSite');\n\n// public define API\nfunction stackChain() {\n  this.extend = new TraceModifier();\n  this.filter = new TraceModifier();\n  this.format = new StackFormater();\n  this.version = require('./package.json').version;\n}\n\n\nvar SHORTCIRCUIT_CALLSITE = false;\nstackChain.prototype.callSite = function collectCallSites(options) {\n  if (!options) options = {};\n\n  // Get CallSites\n  SHORTCIRCUIT_CALLSITE = true;\n  var obj = {};\n  Error.captureStackTrace(obj, collectCallSites);\n  var callSites = obj.stack;\n  SHORTCIRCUIT_CALLSITE = false;\n\n  // Slice\n  callSites = callSites.slice(options.slice || 0);\n\n  // Modify CallSites\n  if (options.extend) callSites = this.extend._modify(obj, callSites);\n  if (options.filter) callSites = this.filter._modify(obj, callSites);\n\n  // Done\n  return callSites;\n};\n\nstackChain.prototype.originalCallSite = function (error) {\n  error.stack;\n  return error[originalCallSiteSymbol];\n};\n\nstackChain.prototype.mutatedCallSite = function (error) {\n  error.stack;\n  return error[mutatedCallSiteSymbol];\n};\n\nvar chain = new stackChain();\n\nfunction TraceModifier() {\n  this._modifiers = [];\n}\n\nTraceModifier.prototype._modify = function (error, frames) {\n  for (var i = 0, l = this._modifiers.length; i < l; i++) {\n    frames = this._modifiers[i](error, frames);\n  }\n\n  return frames;\n};\n\nTraceModifier.prototype.attach = function (modifier) {\n  this._modifiers.push(modifier);\n};\n\nTraceModifier.prototype.deattach = function (modifier) {\n  var index = this._modifiers.indexOf(modifier);\n\n  if (index === -1) return false;\n\n  this._modifiers.splice(index, 1);\n  return true;\n};\n\nfunction StackFormater() {\n  this._formater = defaultFormater;\n  this._previous = undefined;\n}\n\nStackFormater.prototype.replace = function (formater) {\n  if (formater) {\n    this._formater = formater;\n  } else {\n    this.restore();\n  }\n};\n\nStackFormater.prototype.restore  = function () {\n  this._formater = defaultFormater;\n  this._previous = undefined;\n};\n\nStackFormater.prototype._backup = function () {\n  this._previous = this._formater;\n};\n\nStackFormater.prototype._roolback = function () {\n  if (this._previous === defaultFormater) {\n    this.replace(undefined);\n  } else {\n    this.replace(this._previous);\n  }\n\n  this._previous = undefined;\n};\n\n\n//\n// Set Error.prepareStackTrace thus allowing stack-chain\n// to take control of the Error().stack formating.\n//\n\n// If there already is a custom stack formater, then set\n// that as the stack-chain formater.\nif (Error.prepareStackTrace) {\n    chain.format.replace(Error.prepareStackTrace);\n}\n\nvar SHORTCIRCUIT_FORMATER = false;\nfunction prepareStackTrace(error, originalFrames) {\n  if (SHORTCIRCUIT_CALLSITE) return originalFrames;\n  if (SHORTCIRCUIT_FORMATER) return defaultFormater(error, originalFrames);\n\n  // Make a loss copy of originalFrames\n  var frames = originalFrames.concat();\n\n  // extend frames\n  frames = chain.extend._modify(error, frames);\n\n  // filter frames\n  frames = chain.filter._modify(error, frames);\n\n  // reduce frames to match Error.stackTraceLimit\n  frames = frames.slice(0, Error.stackTraceLimit);\n\n  // Set the callSite property\n  // But only if it hasn't been explicitly set, otherwise\n  // error.stack would have unintended side effects. Check also for\n  // non-extensible/sealed objects, such as those from Google's Closure Library\n  if (Object.isExtensible(error)) {\n    error[originalCallSiteSymbol] = originalFrames;\n    error[mutatedCallSiteSymbol] = frames;\n  }\n\n  // format frames\n  SHORTCIRCUIT_FORMATER = true;\n  var format = chain.format._formater(error, frames);\n  SHORTCIRCUIT_FORMATER = false;\n\n  return format;\n}\n\n// Replace the v8 stack trace creator\nObject.defineProperty(Error, 'prepareStackTrace', {\n  'get': function () {\n    return prepareStackTrace;\n  },\n\n  'set': function (formater) {\n    // If formater is prepareStackTrace it means that someone ran\n    // var old = Error.prepareStackTrace;\n    // Error.prepareStackTrace = custom\n    // new Error().stack\n    // Error.prepareStackTrace = old;\n    // The effect of this, should be that the old behaviour is restored.\n    if (formater === prepareStackTrace) {\n      chain.format._roolback();\n    }\n    // Error.prepareStackTrace was set, this means that someone is\n    // trying to take control of the Error().stack format. Make\n    // them belive they succeeded by setting them up as the stack-chain\n    // formater.\n    else {\n      chain.format._backup();\n      chain.format.replace(formater);\n    }\n  }\n});\n\nmodule.exports = chain;\n"]},"metadata":{},"sourceType":"script"}