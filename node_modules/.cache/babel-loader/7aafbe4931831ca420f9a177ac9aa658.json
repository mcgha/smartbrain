{"ast":null,"code":"var _jsxFileName = \"/Users/marcoscampos/Files/Portfolio/facerecogbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarify.js';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImgLinkForm from './components/imgLinkForm/ImgLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport './App.css';\nimport 'tachyons';\nconst app = new Clarifai.App({\n  apiKey: '96063c9755fc4b2eaa68373596501ec1'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImgLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcoscampos/Files/Portfolio/facerecogbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Logo","ImgLinkForm","Rank","FaceRecognition","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","response","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onButtonSubmit","imgUrl","state","input","models","predict","FACE_DETECT_MODEL","then","catch","err","console","log","onInputChange","event","target","imageUrl","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarify.js';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImgLinkForm from './components/imgLinkForm/ImgLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport './App.css';\nimport 'tachyons';\n\nconst app = new Clarifai.App({\n  apiKey: '96063c9755fc4b2eaa68373596501ec1'\n});\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imgUrl: this.state.input });\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles\n          className='particles'\n          params={particleOptions}\n        />\n        <div>\n          <Navigation />\n          <Logo />\n        </div>\n        <Rank />\n        <ImgLinkForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}