{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Retina = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst Utils_1 = require(\"../Utils\");\n\nclass Retina {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init() {\n    const container = this.container;\n    const options = container.options;\n\n    if (options.detectRetina) {\n      this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n    } else {\n      this.pixelRatio = 1;\n    }\n\n    if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n      this.reduceFactor = 1;\n    } else {\n      const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n      this.handleMotionChange(mediaQuery);\n      mediaQuery.addEventListener(\"change\", () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n        this.handleMotionChange(mediaQuery);\n        yield container.refresh();\n      }));\n    }\n\n    const ratio = this.pixelRatio;\n\n    if (container.canvas.element) {\n      const element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n\n    const particles = options.particles;\n    this.linksDistance = particles.links.distance * ratio;\n    this.linksWidth = particles.links.width * ratio;\n    this.moveSpeed = particles.move.speed * ratio;\n    this.sizeValue = particles.size.value * ratio;\n    this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n    const modes = options.interactivity.modes;\n    this.connectModeDistance = modes.connect.distance * ratio;\n    this.connectModeRadius = modes.connect.radius * ratio;\n    this.grabModeDistance = modes.grab.distance * ratio;\n    this.repulseModeDistance = modes.repulse.distance * ratio;\n    this.bounceModeDistance = modes.bounce.distance * ratio;\n    this.attractModeDistance = modes.attract.distance * ratio;\n    this.slowModeRadius = modes.slow.radius * ratio;\n    this.bubbleModeDistance = modes.bubble.distance * ratio;\n\n    if (modes.bubble.size) {\n      this.bubbleModeSize = modes.bubble.size * ratio;\n    }\n  }\n\n  initParticle(particle) {\n    const particlesOptions = particle.particlesOptions;\n    const ratio = this.pixelRatio;\n    particle.linksDistance = particlesOptions.links.distance * ratio;\n    particle.linksWidth = particlesOptions.links.width * ratio;\n    particle.moveSpeed = particlesOptions.move.speed * ratio;\n    particle.sizeValue = particlesOptions.size.value * ratio;\n    particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n    particle.maxDistance = particlesOptions.move.distance * ratio;\n  }\n\n  handleMotionChange(mediaQuery) {\n    const options = this.container.options;\n\n    if (mediaQuery.matches) {\n      const motion = options.motion;\n      this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n    } else {\n      this.reduceFactor = 1;\n    }\n  }\n\n}\n\nexports.Retina = Retina;","map":{"version":3,"sources":["/Users/marcoscampos/Files/Portfolio/facerecogbrain/node_modules/tsparticles/dist/Core/Retina.js"],"names":["Object","defineProperty","exports","value","Retina","tslib_1","require","Utils_1","constructor","container","init","options","detectRetina","pixelRatio","Utils","isSsr","window","devicePixelRatio","matchMedia","reduceFactor","mediaQuery","handleMotionChange","addEventListener","__awaiter","refresh","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","linksDistance","links","distance","linksWidth","moveSpeed","move","speed","sizeValue","sizeAnimationSpeed","animation","modes","interactivity","connectModeDistance","connect","connectModeRadius","radius","grabModeDistance","grab","repulseModeDistance","repulse","bounceModeDistance","bounce","attractModeDistance","attract","slowModeRadius","slow","bubbleModeDistance","bubble","bubbleModeSize","initParticle","particle","particlesOptions","maxDistance","matches","motion","disable","reduce","factor"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Retina = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Utils_1 = require(\"../Utils\");\nclass Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container;\n        const options = container.options;\n        if (options.detectRetina) {\n            this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n        }\n        else {\n            this.pixelRatio = 1;\n        }\n        if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n            this.reduceFactor = 1;\n        }\n        else {\n            const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n            this.handleMotionChange(mediaQuery);\n            mediaQuery.addEventListener(\"change\", () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                this.handleMotionChange(mediaQuery);\n                yield container.refresh();\n            }));\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.moveSpeed = particles.move.speed * ratio;\n        this.sizeValue = particles.size.value * ratio;\n        this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.bounceModeDistance = modes.bounce.distance * ratio;\n        this.attractModeDistance = modes.attract.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const particlesOptions = particle.particlesOptions;\n        const ratio = this.pixelRatio;\n        particle.linksDistance = particlesOptions.links.distance * ratio;\n        particle.linksWidth = particlesOptions.links.width * ratio;\n        particle.moveSpeed = particlesOptions.move.speed * ratio;\n        particle.sizeValue = particlesOptions.size.value * ratio;\n        particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n        particle.maxDistance = particlesOptions.move.distance * ratio;\n    }\n    handleMotionChange(mediaQuery) {\n        const options = this.container.options;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\nexports.Retina = Retina;\n"]},"metadata":{},"sourceType":"script"}